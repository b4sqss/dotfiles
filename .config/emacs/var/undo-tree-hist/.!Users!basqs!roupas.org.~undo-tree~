(undo-tree-save-format-version . 1)
"ff9d23cdb22a6753ba869f6aeb95a2f10ed2a88b"
[nil nil nil nil (25383 31635 125682 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 205 . 206) (nil fontified nil 194 . 206) (nil fontified nil 175 . 194) (nil fontified nil 162 . 175) (nil fontified nil 147 . 162) (nil fontified nil 146 . 147) (nil fontified nil 132 . 146) (nil fontified nil 119 . 132) (nil fontified nil 107 . 119) (nil fontified nil 92 . 107) (nil fontified nil 80 . 92) (nil fontified nil 67 . 80) (nil fontified nil 66 . 67) (nil fontified nil 54 . 66) (nil fontified nil 41 . 54) (nil fontified nil 25 . 41) (nil fontified nil 1 . 25) (1 . 206) (t . -1)) nil (25383 31635 125680 0) 0 nil])
([nil nil ((206 . 207)) nil (25383 31635 125677 0) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -209) (209 . 210) (#("]" 0 1 (fontified nil)) . -209) (208 . 210) (207 . 209)) nil (25383 31635 125676 0) 0 nil])
([nil nil ((210 . 211)) nil (25383 31635 125675 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -210) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) 211) nil (25383 31635 125673 0) 0 nil])
([nil nil ((207 . 209)) nil (25383 31635 125668 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -207) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#(" " 0 1 (fontified t)) . -208) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) 209) nil (25383 31635 125665 0) 0 nil])
([nil nil ((207 . 209)) nil (25383 31635 125632 0) 0 nil])
([nil nil ((#("- [ ]" 0 1 (display "â€“" fontified t) 1 2 (fontified t) 2 3 (face (org-checkbox) fontified t) 3 4 (face (org-checkbox) fontified t) 4 5 (face (org-checkbox) fontified t)) . 207) (undo-tree-id0 . -5) (undo-tree-id1 . -3) (undo-tree-id2 . -3) (undo-tree-id3 . -3) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (undo-tree-id6 . -3) (undo-tree-id7 . -4) (undo-tree-id8 . -4) (undo-tree-id9 . -4) (undo-tree-id10 . -4) (undo-tree-id11 . -4) (undo-tree-id12 . -4) (undo-tree-id13 . -5) (undo-tree-id14 . -5) (undo-tree-id15 . -5) (undo-tree-id16 . -5) (undo-tree-id17 . -5) (undo-tree-id18 . -5) (undo-tree-id19 . -5) (undo-tree-id20 . -5) (undo-tree-id21 . -5) (undo-tree-id22 . -5) (undo-tree-id23 . -5) (undo-tree-id24 . -5) (undo-tree-id25 . -5) (undo-tree-id26 . -5) (undo-tree-id27 . -5) (undo-tree-id28 . -5) (undo-tree-id29 . -5) (undo-tree-id30 . -5) (undo-tree-id31 . -5) (undo-tree-id32 . -5) (undo-tree-id33 . -5) (undo-tree-id34 . -5) (undo-tree-id35 . -5) (undo-tree-id36 . -5) (undo-tree-id37 . -5) (undo-tree-id38 . -5) (undo-tree-id39 . -5) (undo-tree-id40 . -5) (undo-tree-id41 . -5) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -5) (undo-tree-id59 . -5) (undo-tree-id60 . -5) (undo-tree-id61 . -5) (undo-tree-id62 . -5) (undo-tree-id63 . -5) (undo-tree-id64 . -5) (undo-tree-id65 . -5) (undo-tree-id66 . -5) (undo-tree-id67 . -5) (undo-tree-id68 . -5) (undo-tree-id69 . -5) (undo-tree-id70 . -5) (undo-tree-id71 . -5) (undo-tree-id72 . -5) (undo-tree-id73 . -5) (undo-tree-id74 . -5) (undo-tree-id75 . -5)) nil (25383 31635 125628 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 198 . 199) (nil fontified nil 198 . 199) (nil fontified nil 197 . 198) (nil fontified nil 196 . 197) (nil fontified nil 195 . 196) (nil fontified nil 194 . 195) (194 . 199)) nil (25383 31635 125555 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 179 . 180) (nil fontified nil 179 . 180) (nil fontified nil 178 . 179) (nil fontified nil 177 . 178) (nil fontified nil 176 . 177) (nil fontified nil 175 . 176) (175 . 180)) nil (25383 31635 125553 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 5 . 6) (nil fontified nil 5 . 6) (nil fontified nil 4 . 5) (nil fontified nil 3 . 4) (nil fontified nil 2 . 3) (nil fontified nil 1 . 2) (1 . 6)) nil (25383 31635 125551 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 34 . 35) (nil fontified nil 34 . 35) (nil fontified nil 33 . 34) (nil fontified nil 32 . 33) (nil fontified nil 31 . 32) (nil fontified nil 30 . 31) (30 . 35)) nil (25383 31635 125549 0) 0 nil])
([nil nil ((35 . 36)) nil (25383 31635 125548 0) 0 nil])
([nil nil ((6 . 7)) nil (25383 31635 125547 0) 0 nil])
([nil nil ((192 . 193)) nil (25383 31635 125546 0) 0 nil])
([nil nil ((217 . 218)) nil (25383 31635 125546 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 58 . 59) (nil fontified nil 58 . 59) (nil fontified nil 57 . 58) (nil fontified nil 56 . 57) (nil fontified nil 55 . 56) (nil fontified nil 54 . 55) (nil fontified nil 53 . 54) (53 . 59)) nil (25383 31635 125545 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 77 . 78) (nil fontified nil 77 . 78) (nil fontified nil 76 . 77) (nil fontified nil 75 . 76) (nil fontified nil 74 . 75) (nil fontified nil 73 . 74) (nil fontified nil 72 . 73) (72 . 78)) nil (25383 31635 125542 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 96 . 97) (nil fontified nil 96 . 97) (nil fontified nil 95 . 96) (nil fontified nil 94 . 95) (nil fontified nil 93 . 94) (nil fontified nil 92 . 93) (nil fontified nil 91 . 92) (91 . 97)) nil (25383 31635 125808 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 115 . 116) (nil fontified nil 115 . 116) (nil fontified nil 114 . 115) (nil fontified nil 113 . 114) (nil fontified nil 112 . 113) (nil fontified nil 111 . 112) (nil fontified nil 110 . 111) (110 . 116)) nil (25383 31641 233924 0) 0 nil] [nil nil ((nil rear-nonsticky nil 119 . 120) (nil fontified nil 119 . 120) (nil fontified nil 118 . 119) (nil fontified nil 117 . 118) (nil fontified nil 116 . 117) (nil fontified nil 115 . 116) (nil fontified nil 114 . 115) (114 . 120)) ((#("- [ ] " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil rear-nonsticky t) 5 6 (rear-nonsticky nil fontified nil)) . 114) (undo-tree-id121 . -6) (undo-tree-id122 . -6) (nil rear-nonsticky t 119 . 120)) (25383 31635 125536 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 133 . 134) (nil fontified nil 133 . 134) (nil fontified nil 132 . 133) (nil fontified nil 131 . 132) (nil fontified nil 130 . 131) (nil fontified nil 129 . 130) (nil fontified nil 128 . 129) (128 . 134)) nil (25383 31641 233921 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 154 . 155) (nil fontified nil 154 . 155) (nil fontified nil 153 . 154) (nil fontified nil 152 . 153) (nil fontified nil 151 . 152) (nil fontified nil 150 . 151) (nil fontified nil 149 . 150) (149 . 155)) nil (25383 31641 233919 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 172 . 173) (nil fontified nil 172 . 173) (nil fontified nil 171 . 172) (nil fontified nil 170 . 171) (nil fontified nil 169 . 170) (nil fontified nil 168 . 169) (nil fontified nil 167 . 168) (167 . 173)) nil (25383 31641 233916 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 191 . 192) (nil fontified nil 191 . 192) (nil fontified nil 190 . 191) (nil fontified nil 189 . 190) (nil fontified nil 188 . 189) (nil fontified nil 187 . 188) (nil fontified nil 186 . 187) (186 . 192)) nil (25383 31641 233914 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 212 . 213) (nil fontified nil 212 . 213) (nil fontified nil 211 . 212) (nil fontified nil 210 . 211) (nil fontified nil 209 . 210) (nil fontified nil 208 . 209) (nil fontified nil 207 . 208) (207 . 213)) nil (25383 31641 233912 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 233 . 234) (nil fontified nil 233 . 234) (nil fontified nil 232 . 233) (nil fontified nil 231 . 232) (nil fontified nil 230 . 231) (nil fontified nil 229 . 230) (nil fontified nil 228 . 229) (228 . 234)) nil (25383 31641 233907 0) 0 nil])
([nil nil ((260 . 271) (#("abercrombie" 0 11 (fontified t)) . -260) (undo-tree-id136 . -11) (undo-tree-id137 . -11) (undo-tree-id138 . -11) (undo-tree-id139 . -11) (undo-tree-id140 . -11) (undo-tree-id141 . -11) (undo-tree-id142 . -11) 271 (t 25383 31641 257073 409000)) nil (25383 31678 216259 0) 0 nil])
([nil nil ((260 . 271) (#("Abercrombie" 0 11 (fontified nil)) . 260) (undo-tree-id150 . -11) (undo-tree-id151 . -11) (undo-tree-id152 . -11) (undo-tree-id153 . -11) (undo-tree-id154 . -11) (undo-tree-id155 . -11)) ((260 . 271) (#("abercrombie" 0 11 (fontified nil)) . 260) (undo-tree-id143 . -11) (undo-tree-id144 . -11) (undo-tree-id145 . -11) (undo-tree-id146 . -11) (undo-tree-id147 . -11) (undo-tree-id148 . 11) (undo-tree-id149 . -11)) (25383 31682 526488 0) 0 nil])
([nil nil ((260 . 271) (#("abercrombie" 0 11 (fontified nil)) . 260) (undo-tree-id156 . -11) (undo-tree-id157 . -11) (undo-tree-id158 . -11) (undo-tree-id159 . -11) (undo-tree-id160 . -11) (undo-tree-id161 . 11) (undo-tree-id162 . -11)) ((260 . 271) (#("Abercrombie" 0 11 (fontified t)) . 260) (t 25383 31647 587521 6000)) (25383 31682 715453 0) 0 nil])
([nil nil ((1 . 2) (t 25383 31647 587521 6000)) nil (25383 31765 35064 0) 0 nil])
([nil nil ((1 . 6)) nil (25383 31765 35064 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -4) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (#("u" 0 1 (fontified t)) . -5) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) 6) nil (25383 31765 35061 0) 0 nil])
([nil nil ((4 . 9)) nil (25383 31765 35044 0) 0 nil])
([nil nil ((99 . 100)) nil (25383 31765 35043 0) 0 nil])
([nil nil ((#("P" 0 1 (fontified t)) . -99) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) 100) nil (25383 31765 35042 0) 0 nil])
([nil nil ((9 . 18)) nil (25383 31765 35037 0) 0 nil])
([nil nil ((108 . 121)) nil (25383 31765 35036 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -117) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (#("a" 0 1 (fontified t)) . -118) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (#("i" 0 1 (fontified t)) . -119) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (#("s" 0 1 (fontified t)) . -120) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) 121) nil (25383 31765 35031 0) 0 nil])
([nil nil ((117 . 121)) nil (25383 31765 34916 0) 0 nil])
([nil nil ((237 . 240)) nil (25383 31765 34916 0) 0 nil])
([nil nil ((#("R" 0 1 (fontified t)) . -237) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (#("o" 0 1 (fontified t)) . -238) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (#("u" 0 1 (fontified t)) . -239) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) 240) nil (25383 31765 34912 0) 0 nil])
([nil nil ((237 . 244)) nil (25383 31765 34874 0) 0 nil])
([nil nil ((180 . 216) (#("- [ ] CalÃ§a beige
- [ ] CalÃ§a branca" 0 1 (display "â€“" fontified t) 1 2 (fontified t) 2 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 3 4 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 4 5 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t rear-nonsticky t) 5 6 (rear-nonsticky t fontified t) 6 18 (fontified t) 18 19 (display "â€“" fontified t) 19 20 (fontified t) 20 21 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 21 22 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 22 23 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t rear-nonsticky t) 23 24 (rear-nonsticky t fontified t) 24 36 (fontified t)) . 180) (undo-tree-id1672 . -18) (undo-tree-id1673 . -9) (undo-tree-id1674 . -15) (undo-tree-id1675 . -15) (undo-tree-id1676 . -15) (undo-tree-id1677 . -15) (undo-tree-id1678 . -15) (undo-tree-id1679 . -33) (undo-tree-id1680 . -33) (undo-tree-id1681 . -33) (undo-tree-id1682 . -33) (undo-tree-id1683 . -33) (undo-tree-id1684 . -27) (undo-tree-id1685 . -27) (undo-tree-id1686 . -27) (undo-tree-id1687 . -27) (undo-tree-id1688 . -27) (undo-tree-id1689 . -9) (undo-tree-id1690 . -9) (undo-tree-id1691 . -9) (undo-tree-id1692 . -9) (undo-tree-id1693 . -9) (undo-tree-id1694 . -9) 189) nil (25383 31765 34873 0) 0 nil])
([nil nil ((199 . 236) (#("- [ ] CalÃ§a beige
- [ ] Bermuda linho" 0 1 (display "â€“" fontified t) 1 2 (fontified t) 2 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 3 4 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 4 5 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) rear-nonsticky t fontified t) 5 6 (fontified t rear-nonsticky t) 6 17 (fontified t) 17 18 (fontified t) 18 19 (display "â€“" fontified t) 19 20 (fontified t) 20 21 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 21 22 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 22 23 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t rear-nonsticky t) 23 24 (rear-nonsticky t fontified t) 24 37 (fontified t)) . 199) (undo-tree-id1654 . -18) (undo-tree-id1655 . -9) (undo-tree-id1656 . -33) (undo-tree-id1657 . -33) (undo-tree-id1658 . -33) (undo-tree-id1659 . -33) (undo-tree-id1660 . -33) (undo-tree-id1661 . -27) (undo-tree-id1662 . -27) (undo-tree-id1663 . -27) (undo-tree-id1664 . -27) (undo-tree-id1665 . -27) (undo-tree-id1666 . -9) (undo-tree-id1667 . -9) (undo-tree-id1668 . -9) (undo-tree-id1669 . -9) (undo-tree-id1670 . -9) (undo-tree-id1671 . -9) 208) nil (25383 31765 34855 0) 0 nil])
([nil nil ((180 . 218) (#("- [ ] CalÃ§a branca
- [ ] Bermuda linho" 0 1 (display "â€“" fontified t) 1 2 (fontified t) 2 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 3 4 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 4 5 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) rear-nonsticky t fontified t) 5 6 (fontified t rear-nonsticky t) 6 18 (fontified t) 18 19 (fontified t) 19 20 (display "â€“" fontified t) 20 21 (fontified t) 21 22 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 22 23 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 23 24 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) rear-nonsticky t fontified t) 24 25 (fontified t rear-nonsticky t) 25 38 (fontified t)) . 180) (undo-tree-id1626 . -19) (undo-tree-id1627 . -9) (undo-tree-id1628 . -19) (undo-tree-id1629 . -19) (undo-tree-id1630 . -19) (undo-tree-id1631 . -19) (undo-tree-id1632 . -19) (undo-tree-id1633 . -19) (undo-tree-id1634 . -19) (undo-tree-id1635 . -19) (undo-tree-id1636 . -19) (undo-tree-id1637 . -19) (undo-tree-id1638 . -19) (undo-tree-id1639 . -19) (undo-tree-id1640 . -19) (undo-tree-id1641 . -19) (undo-tree-id1642 . -19) (undo-tree-id1643 . -28) (undo-tree-id1644 . -28) (undo-tree-id1645 . -28) (undo-tree-id1646 . -28) (undo-tree-id1647 . -28) (undo-tree-id1648 . -9) (undo-tree-id1649 . -9) (undo-tree-id1650 . -9) (undo-tree-id1651 . -9) (undo-tree-id1652 . -9) (undo-tree-id1653 . -9) 189) nil (25383 31765 34841 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -140) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (#("-" 0 1 (fontified t)) . -141) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (#(" " 0 1 (fontified t)) . -142) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (#("[" 0 1 (fontified t)) . -143) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (#(" " 0 1 (fontified t)) . -144) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (#("]" 0 1 (face (org-checkbox) fontified t rear-nonsticky t)) . -145) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . 1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (#(" " 0 1 (rear-nonsticky t fontified t)) . -146) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (#("C" 0 1 (fontified t)) . -147) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (#("a" 0 1 (fontified t)) . -148) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (#("l" 0 1 (fontified t)) . -149) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (#("Ã§" 0 1 (fontified t)) . -150) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (#("a" 0 1 (fontified t)) . -151) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (#(" " 0 1 (fontified t)) . -152) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (#("b" 0 1 (fontified t)) . -153) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (#("e" 0 1 (fontified t)) . -154) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (#("i" 0 1 (fontified t)) . -155) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (#("g" 0 1 (fontified t)) . -156) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (#("e" 0 1 (fontified t)) . -157) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) 158) nil (25383 31765 34763 0) 0 nil])
([nil nil ((181 . 184)) nil (25383 31765 33821 0) 0 nil])
([nil nil ((182 . 183)) nil (25383 31765 33821 0) 0 nil])
([nil nil ((#("B" 0 1 (fontified t)) . -182) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) 183) nil (25383 31765 33819 0) 0 nil])
([nil nil ((182 . 187)) nil (25383 31765 33814 0) 0 nil])
([nil nil ((#("Ã£" 0 1 (fontified t)) . -185) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (#("s" 0 1 (fontified t)) . -186) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) 187) nil (25383 31765 33812 0) 0 nil])
([nil nil ((185 . 187)) nil (25383 31765 33794 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -185) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#("Ã§" 0 1 (fontified t)) . -186) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) 187) nil (25383 31765 33791 0) 0 nil])
([nil nil ((185 . 188)) nil (25383 31765 33764 0) 0 nil])
([nil nil ((236 . 275) (#("- [ ] SuÃ©ter reserva
- [ ] Camisa preta" 0 1 (display "â€“" fontified t) 1 2 (fontified t) 2 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 3 4 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 4 5 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t rear-nonsticky t) 5 6 (rear-nonsticky t fontified t) 6 21 (fontified t) 21 22 (display "â€“" fontified t) 22 23 (fontified t) 23 24 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 24 25 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 25 26 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t rear-nonsticky t) 26 27 (rear-nonsticky t fontified t) 27 39 (fontified t)) . 236) (undo-tree-id233 . -21) (undo-tree-id234 . -9) (undo-tree-id235 . -9) (undo-tree-id236 . -9) (undo-tree-id237 . -9) (undo-tree-id238 . -9) (undo-tree-id239 . -8) (undo-tree-id240 . -8) (undo-tree-id241 . -8) (undo-tree-id242 . -8) (undo-tree-id243 . -8) (undo-tree-id244 . -6) (undo-tree-id245 . -6) (undo-tree-id246 . -6) (undo-tree-id247 . -6) (undo-tree-id248 . -6) (undo-tree-id249 . -6)) nil (25383 31765 33762 0) 0 nil])
([nil nil ((255 . 300) (#("- [ ] SuÃ©ter reserva
- [ ] Camisa Abercrombie" 0 1 (display "â€“" fontified t) 1 2 (fontified t) 2 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 3 4 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 4 5 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) rear-nonsticky t fontified t) 5 6 (fontified t rear-nonsticky t) 6 20 (fontified t) 20 21 (fontified t) 21 22 (display "â€“" fontified t) 22 23 (fontified t) 23 24 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 24 25 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 25 26 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) rear-nonsticky t fontified t) 26 27 (fontified t) 27 34 (fontified t) 34 45 (fontified t)) . 255) (undo-tree-id214 . -26) (undo-tree-id215 . -21) (undo-tree-id216 . -34) (undo-tree-id217 . -34) (undo-tree-id218 . -34) (undo-tree-id219 . -34) (undo-tree-id220 . -34) (undo-tree-id221 . -34) (undo-tree-id222 . -34) (undo-tree-id223 . -34) (undo-tree-id224 . -34) (undo-tree-id225 . -34) (undo-tree-id226 . -34) (undo-tree-id227 . -34) (undo-tree-id228 . -34) (undo-tree-id229 . -34) (undo-tree-id230 . -34) (undo-tree-id231 . -34) (undo-tree-id232 . -34)) nil (25383 31765 33749 0) 0 nil])
([nil nil ((280 . 319) (#("- [ ] SuÃ©ter reserva
- [ ] Camisa linho" 0 1 (display "â€“" fontified t) 1 2 (fontified t) 2 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 3 4 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 4 5 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t rear-nonsticky t) 5 6 (rear-nonsticky t fontified t) 6 20 (fontified t) 20 21 (fontified t) 21 22 (display "â€“" fontified t) 22 23 (fontified t) 23 24 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 24 25 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 25 26 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) rear-nonsticky t fontified t) 26 27 (fontified t) 27 38 (fontified t) 38 39 (rear-nonsticky t fontified t)) . 280) (undo-tree-id202 . -39) (undo-tree-id203 . -39) (undo-tree-id204 . -39) (undo-tree-id205 . -39) (undo-tree-id206 . -39) (undo-tree-id207 . -39) (undo-tree-id208 . -39) (undo-tree-id209 . -39) (undo-tree-id210 . -39) (undo-tree-id211 . -39) (undo-tree-id212 . -39) (undo-tree-id213 . -39)) nil (25383 31765 33735 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 237) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (238 . 239)) nil (25383 31765 33726 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -237) (undo-tree-id169 . -1) (undo-tree-id170 . 1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) 238) nil (25383 31765 33710 0) 0 nil])
([nil nil ((238 . 239)) nil (25383 31765 33701 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 239)) nil (25383 31765 33701 0) 0 nil])
([nil nil ((237 . 238)) nil (25383 31765 33700 0) 0 nil])
([nil nil ((#("  " 0 1 (fontified t) 1 2 (fontified t)) . 188) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) 238) nil (25383 31765 33697 0) 0 nil])
([nil nil ((nil rear-nonsticky t 257 . 258) (t 25383 31765 45241 18000) (nil fontified t 257 . 258) (t 25383 31765 45241 18000) (nil face (org-checkbox) 257 . 258) (t 25383 31765 45241 18000) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 257 . 258) (t 25383 31765 45241 18000) (nil fontified t 256 . 257) (t 25383 31765 45241 18000) (nil face (org-checkbox) 256 . 257) (t 25383 31765 45241 18000) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 256 . 257) (t 25383 31765 45241 18000) (nil fontified t 255 . 256) (t 25383 31765 45241 18000) (nil face (org-checkbox) 255 . 256) (t 25383 31765 45241 18000) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 255 . 256) (t 25383 31765 45241 18000) (#("[ ]" 0 1 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 1 2 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 2 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t rear-nonsticky t)) . 255) (t 25383 31765 45241 18000) (258 . 261) 255 (t 25383 31765 45241 18000)) nil (25383 31789 23191 0) 0 nil])
([nil nil ((nil fontified t 301 . 302) (nil rear-nonsticky t 301 . 302) (nil face (org-checkbox) 301 . 302) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 301 . 302) (nil fontified t 300 . 301) (nil face (org-checkbox) 300 . 301) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 300 . 301) (nil fontified t 299 . 300) (nil face (org-checkbox) 299 . 300) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 299 . 300) (#("[ ]" 0 1 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 1 2 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 2 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) rear-nonsticky t fontified t)) . 299) (302 . 305) 299) nil (25383 31789 23186 0) 0 nil])
([nil nil ((nil rear-nonsticky t 212 . 213) (nil fontified t 212 . 213) (nil face (org-checkbox) 212 . 213) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 212 . 213) (nil fontified t 211 . 212) (nil face (org-checkbox) 211 . 212) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 211 . 212) (nil fontified t 210 . 211) (nil face (org-checkbox) 210 . 211) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 210 . 211) (#("[ ]" 0 1 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 1 2 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 2 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t rear-nonsticky t)) . 210) (213 . 216) 210) nil (25383 31789 23183 0) 0 nil])
([nil nil ((nil rear-nonsticky t 126 . 127) (nil fontified t 126 . 127) (nil face (org-checkbox) 126 . 127) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 126 . 127) (nil fontified t 125 . 126) (nil face (org-checkbox) 125 . 126) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 125 . 126) (nil fontified t 124 . 125) (nil face (org-checkbox) 124 . 125) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 124 . 125) (#("[ ]" 0 1 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 1 2 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 2 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t rear-nonsticky t)) . 124) (127 . 130) 124) nil (25383 31789 23179 0) 0 nil])
([nil nil ((nil rear-nonsticky t 94 . 95) (nil fontified t 94 . 95) (nil face (org-checkbox) 94 . 95) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 94 . 95) (nil fontified t 93 . 94) (nil face (org-checkbox) 93 . 94) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 93 . 94) (nil fontified t 92 . 93) (nil face (org-checkbox) 92 . 93) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 92 . 93) (#("[ ]" 0 1 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 1 2 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 2 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t rear-nonsticky t)) . 92) (95 . 98) 92) nil (25383 31789 23176 0) 0 nil])
([nil nil ((nil fontified t 53 . 54) (nil rear-nonsticky t 53 . 54) (nil face (org-checkbox) 53 . 54) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 53 . 54) (nil fontified t 52 . 53) (nil face (org-checkbox) 52 . 53) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 52 . 53) (nil fontified t 51 . 52) (nil face (org-checkbox) 51 . 52) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 51 . 52) (#("[ ]" 0 1 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 1 2 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 2 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) rear-nonsticky t fontified t)) . 51) (54 . 57) 51) nil (25383 31789 23172 0) 0 nil])
([nil nil ((nil fontified t 23 . 24) (nil rear-nonsticky t 23 . 24) (nil face (org-checkbox) 23 . 24) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 23 . 24) (nil fontified t 22 . 23) (nil face (org-checkbox) 22 . 23) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 22 . 23) (nil fontified t 21 . 22) (nil face (org-checkbox) 21 . 22) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 21 . 22) (#("[ ]" 0 1 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 1 2 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 2 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) rear-nonsticky t fontified t)) . 21) (24 . 27) 21) nil (25383 31789 23166 0) 0 nil])
([nil nil ((318 . 323) (t 25383 31789 32757 156000)) nil (25383 31820 80707 0) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -318) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (#("Ãª" 0 1 (fontified t)) . -319) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (#("n" 0 1 (fontified t)) . -320) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (#("i" 0 1 (fontified t)) . -321) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (#("s" 0 1 (fontified t)) . -322) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) 323) nil (25383 31820 80699 0) 0 nil])
([nil nil ((318 . 323)) nil (25383 31820 80592 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -322) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) 323) nil (25383 31820 80591 0) 0 nil])
([nil nil ((322 . 325)) nil (25383 31820 80586 0) 0 nil])
([nil nil ((325 . 326)) nil (25383 31820 80585 0) 0 nil])
([nil nil ((326 . 329)) nil (25383 31820 80584 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -327) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (#(" " 0 1 (fontified t)) . -328) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) 329) nil (25383 31820 80582 0) 0 nil])
([nil nil ((327 . 329)) nil (25383 31820 80564 0) 0 nil])
([nil nil ((#("Â´" 0 1 (fontified nil)) . -328) (undo-tree-id2023 . -1) 329) nil (25383 31820 80563 0) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -330) (330 . 331) (#("]" 0 1 (face (org-checkbox) fontified nil)) . -330) (329 . 331) (328 . 330)) nil (25383 31820 80561 0) 0 nil])
([nil nil ((331 . 337)) nil (25383 31820 80560 0) 0 nil])
([nil nil ((337 . 340)) nil (25383 31820 80559 0) 0 nil])
([nil nil ((326 . 340) (#("- 
- [ ] TÃªnis" 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (display "â€“" fontified nil) 4 5 (fontified nil) 5 7 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified nil) 7 8 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified nil) 8 14 (fontified nil)) . 326) (undo-tree-id1885 . -14) (undo-tree-id1886 . -4) (undo-tree-id1887 . -4) (undo-tree-id1888 . -4) (undo-tree-id1889 . -4) (undo-tree-id1890 . -4) (undo-tree-id1891 . -4) (undo-tree-id1892 . -4) (undo-tree-id1893 . -4) (undo-tree-id1894 . -4) (undo-tree-id1895 . -4) (undo-tree-id1896 . -4) (undo-tree-id1897 . -4) (undo-tree-id1898 . -4) (undo-tree-id1899 . -4) (undo-tree-id1900 . -4) (undo-tree-id1901 . -4) (undo-tree-id1902 . -4) (undo-tree-id1903 . -4) (undo-tree-id1904 . -4) (undo-tree-id1905 . -4) (undo-tree-id1906 . -4) (undo-tree-id1907 . -4) (undo-tree-id1908 . -4) (undo-tree-id1909 . -4) (undo-tree-id1910 . -4) (undo-tree-id1911 . -4) (undo-tree-id1912 . -4) (undo-tree-id1913 . -4) (undo-tree-id1914 . -4) (undo-tree-id1915 . -4) (undo-tree-id1916 . -5) (undo-tree-id1917 . -5) (undo-tree-id1918 . -5) (undo-tree-id1919 . -5) (undo-tree-id1920 . -5) (undo-tree-id1921 . -5) (undo-tree-id1922 . -5) (undo-tree-id1923 . -5) (undo-tree-id1924 . -5) (undo-tree-id1925 . -5) (undo-tree-id1926 . -5) (undo-tree-id1927 . -5) (undo-tree-id1928 . -5) (undo-tree-id1929 . -5) (undo-tree-id1930 . -5) (undo-tree-id1931 . -5) (undo-tree-id1932 . -6) (undo-tree-id1933 . -6) (undo-tree-id1934 . -6) (undo-tree-id1935 . -6) (undo-tree-id1936 . -6) (undo-tree-id1937 . -6) (undo-tree-id1938 . -7) (undo-tree-id1939 . -7) (undo-tree-id1940 . -7) (undo-tree-id1941 . -7) (undo-tree-id1942 . -7) (undo-tree-id1943 . -7) (undo-tree-id1944 . -8) (undo-tree-id1945 . -8) (undo-tree-id1946 . -8) (undo-tree-id1947 . -8) (undo-tree-id1948 . -8) (undo-tree-id1949 . -8) (undo-tree-id1950 . -8) (undo-tree-id1951 . -8) (undo-tree-id1952 . -8) (undo-tree-id1953 . -8) (undo-tree-id1954 . -8) (undo-tree-id1955 . -8) (undo-tree-id1956 . -8) (undo-tree-id1957 . -8) (undo-tree-id1958 . -8) (undo-tree-id1959 . -8) (undo-tree-id1960 . -8) (undo-tree-id1961 . -8) (undo-tree-id1962 . -9) (undo-tree-id1963 . -9) (undo-tree-id1964 . -9) (undo-tree-id1965 . -9) (undo-tree-id1966 . -9) (undo-tree-id1967 . -9) (undo-tree-id1968 . -10) (undo-tree-id1969 . -10) (undo-tree-id1970 . -10) (undo-tree-id1971 . -10) (undo-tree-id1972 . -10) (undo-tree-id1973 . -10) (undo-tree-id1974 . -10) (undo-tree-id1975 . -10) (undo-tree-id1976 . -10) (undo-tree-id1977 . -10) (undo-tree-id1978 . -11) (undo-tree-id1979 . -11) (undo-tree-id1980 . -11) (undo-tree-id1981 . -11) (undo-tree-id1982 . -11) (undo-tree-id1983 . -11) (undo-tree-id1984 . -12) (undo-tree-id1985 . -12) (undo-tree-id1986 . -12) (undo-tree-id1987 . -12) (undo-tree-id1988 . -12) (undo-tree-id1989 . -12) (undo-tree-id1990 . -13) (undo-tree-id1991 . -13) (undo-tree-id1992 . -13) (undo-tree-id1993 . -13) (undo-tree-id1994 . -13) (undo-tree-id1995 . -13) (undo-tree-id1996 . -14) (undo-tree-id1997 . -14) (undo-tree-id1998 . -14) (undo-tree-id1999 . -14) (undo-tree-id2000 . -14) (undo-tree-id2001 . -14) (undo-tree-id2002 . -14) (undo-tree-id2003 . -14) (undo-tree-id2004 . -14) (undo-tree-id2005 . -14) (undo-tree-id2006 . -14) (undo-tree-id2007 . -14) (undo-tree-id2008 . -14) (undo-tree-id2009 . -14) (undo-tree-id2010 . -14) (undo-tree-id2011 . -14) (undo-tree-id2012 . -14) (undo-tree-id2013 . -14) (undo-tree-id2014 . -3) (326 . 329) (#("
  " 0 3 (fontified t)) . -337) (undo-tree-id2015 . -3) (undo-tree-id2016 . 3) (undo-tree-id2017 . -3) (undo-tree-id2018 . -3) (undo-tree-id2019 . -3) (undo-tree-id2020 . -3) (undo-tree-id2021 . -3) (undo-tree-id2022 . -3) 340) nil (25383 31820 80552 0) 0 nil])
([nil nil ((343 . 351) (#("]" 0 1 (fontified nil)) . -342) (342 . 343) (#("]" 0 1 (face (org-checkbox) fontified nil)) . -342) (341 . 343) (340 . 342)) nil (25383 31820 80447 0) 0 nil])
([nil nil ((nil fontified t 342 . 343) (nil face (org-checkbox) 342 . 343) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 342 . 343) (nil fontified t 340 . 342) (nil face (org-checkbox) 340 . 342) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 340 . 342) (#("[ ]" 0 2 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t) 2 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t)) . 340) (343 . 346) 351) nil (25383 31820 80444 0) 0 nil])
([nil nil ((351 . 352)) nil (25383 31820 80440 0) 0 nil])
([nil nil ((161 . 164) (t 25383 31820 91785 10000)) nil (25383 31878 323824 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 276 . 277) (nil fontified nil 164 . 277) (164 . 277)) nil (25383 31878 323823 0) 0 nil])
([nil nil ((323 . 326)) nil (25383 31878 323821 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 418 . 419) (nil fontified nil 326 . 419) (326 . 419)) nil (25383 31878 323820 0) 0 nil])
([nil nil ((89 . 92)) nil (25383 31878 323819 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 259 . 260) (nil fontified nil 92 . 260) (92 . 260)) nil (25383 31878 323816 0) 0 nil])
([nil nil ((261 . 262) (#("]" 0 1 (fontified nil)) . -261) (261 . 262) (t 25383 31878 334951 211000)) nil (25383 31888 157053 0) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -261) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . 1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) 262) nil (25383 31888 157050 0) 0 nil])
([nil nil ((261 . 262)) nil (25383 31888 157034 0) 0 nil])
([nil nil ((261 . 263)) nil (25383 31888 157033 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 382 . 383) (nil fontified nil 263 . 383) (263 . 383)) nil (25383 31888 157030 0) 0 nil])
([nil nil ((802 . 805) (t 25383 31888 167877 703000)) nil (25383 31906 371741 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 921 . 922) (nil fontified nil 805 . 922) (805 . 922)) nil (25383 31906 371737 0) 0 nil])
([nil nil ((591 . 594) (t 25383 31906 382576 809000)) nil (25383 31972 425301 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 688 . 689) (nil fontified nil 594 . 689) (594 . 689)) nil (25383 31972 425297 0) 0 nil])
([nil nil ((nil fontified t 73 . 76) (t 25383 31972 435850 326000) (nil face (org-checkbox) 73 . 76) (t 25383 31972 435850 326000) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 73 . 76) (t 25383 31972 435850 326000) (#("[ ]" 0 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t)) . 73) (t 25383 31972 435850 326000) (76 . 79) 71 (t 25383 31972 435850 326000)) nil (25388 50036 205617 0) 0 nil])
([nil nil ((#("  https://www.gareth.com.br/short-polo-ralph-lauren-masculino-swimwear-azul-marinho?utm_source=Site&utm_medium=GoogleMerchant&utm_campaign=GoogleMerchant&sku=SHOPRL94-l-g
  https://www.riachuelo.com.br/kit-bermuda-agua-masculina-2-pecas-tactel-verde-azul-marinho-pool-by-riachuelo-14216922_sku" 0 2 (fontified t) 2 169 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://www.gareth.com.br/short-polo-ralph-lauren-masculino-swimwear-azul-marinho?utm_source=Site&utm_medium=GoogleMerchant&utm_campaign=GoogleMerchant&sku=SHOPRL94-l-g") help-echo "LINK: https://www.gareth.com.br/short-polo-ralph-lauren-masculino-swimwear-azul-marinho?utm_source=Site&utm_medium=GoogleMerchant&utm_campaign=GoogleMerchant&sku=SHOPRL94-l-g" fontified t) 169 170 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://www.gareth.com.br/short-polo-ralph-lauren-masculino-swimwear-azul-marinho?utm_source=Site&utm_medium=GoogleMerchant&utm_campaign=GoogleMerchant&sku=SHOPRL94-l-g") help-echo "LINK: https://www.gareth.com.br/short-polo-ralph-lauren-masculino-swimwear-azul-marinho?utm_source=Site&utm_medium=GoogleMerchant&utm_campaign=GoogleMerchant&sku=SHOPRL94-l-g" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 170 173 (fontified t) 173 292 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://www.riachuelo.com.br/kit-bermuda-agua-masculina-2-pecas-tactel-verde-azul-marinho-pool-by-riachuelo-14216922_sku") help-echo "LINK: https://www.riachuelo.com.br/kit-bermuda-agua-masculina-2-pecas-tactel-verde-azul-marinho-pool-by-riachuelo-14216922_sku" fontified t) 292 293 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://www.riachuelo.com.br/kit-bermuda-agua-masculina-2-pecas-tactel-verde-azul-marinho-pool-by-riachuelo-14216922_sku") help-echo "LINK: https://www.riachuelo.com.br/kit-bermuda-agua-masculina-2-pecas-tactel-verde-azul-marinho-pool-by-riachuelo-14216922_sku" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t)) . -90) (undo-tree-id84 . -293) (undo-tree-id85 . -293) (undo-tree-id86 . -170) (undo-tree-id87 . -170) (undo-tree-id88 . -170) (undo-tree-id89 . -170) (undo-tree-id90 . -170) (undo-tree-id91 . -170) (undo-tree-id92 . -170) (undo-tree-id93 . -170) (undo-tree-id94 . -170) (undo-tree-id95 . -170) (undo-tree-id96 . -170) (undo-tree-id97 . -170) (undo-tree-id98 . -170) (undo-tree-id99 . -170) (undo-tree-id100 . -170) (undo-tree-id101 . -170) (undo-tree-id102 . -170) (undo-tree-id103 . -170) (undo-tree-id104 . -170) (undo-tree-id105 . -170) (undo-tree-id106 . -170) (undo-tree-id107 . -293) (undo-tree-id108 . -293) (undo-tree-id109 . -293) (undo-tree-id110 . -293) (undo-tree-id111 . -293) (undo-tree-id112 . -293) 383 (t 25388 50036 217817 243000)) nil (25388 50039 900967 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -89) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 90) nil (25388 50039 900937 0) 0 nil])
([nil nil ((nil fontified t 590 . 593) (t 25388 50039 912914 105000) (nil face (org-checkbox) 590 . 593) (t 25388 50039 912914 105000) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 590 . 593) (t 25388 50039 912914 105000) (#("[ ]" 0 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t)) . 590) (t 25388 50039 912914 105000) (593 . 596) (t 25388 50039 912914 105000)) nil (25412 19628 194692 0) 0 nil])
([nil nil ((nil fontified t 758 . 761) (nil face (org-checkbox) 758 . 761) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 758 . 761) (#("[ ]" 0 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t)) . 758) (761 . 764) 767) nil (25412 19628 194689 0) 0 nil])
([nil nil ((nil fontified t 280 . 283) (nil face (org-checkbox) 280 . 283) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 280 . 283) (#("[ ]" 0 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t)) . 280) (283 . 286) 289) nil (25412 19628 194687 0) 0 nil])
([nil current ((nil fontified t 143 . 146) (nil face (org-checkbox) 143 . 146) (nil display #("â–¡" 0 1 (face org-modern-symbol)) 143 . 146) (#("[ ]" 0 3 (display #("â–¡" 0 1 (face org-modern-symbol)) face (org-checkbox) fontified t)) . 143) (146 . 149) 152) nil (25412 19628 194675 0) 0 nil])
nil
