(undo-tree-save-format-version . 1)
"1859980f16dd26afffc5f5c310339e7747dd8355"
[nil nil nil nil (25305 16035 948576 0) 0 nil]
([nil nil ((#("    if #1 xs > #1 ys
    then false
    else
        if #2 xs < #2 ys
        then true
        else
            if #3 xs < #3 ys
            then true
            else false
" 0 1 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (0 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 4 6 (face font-lock-keyword-face fontified t) 6 8 (fontified t) 8 9 (face highlight-numbers-number fontified t) 9 16 (fontified t) 16 17 (face highlight-numbers-number fontified t) 17 21 (fontified t) 21 22 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (0 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 22 23 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 23 24 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 24 25 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 25 29 (face font-lock-keyword-face fontified t) 29 36 (fontified t) 36 37 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (0 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 37 38 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 38 39 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 39 40 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 40 44 (face font-lock-keyword-face fontified t) 44 45 (fontified t) 45 46 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (0 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 46 47 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 47 48 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 48 49 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 49 50 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (1 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 50 51 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 51 52 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 52 53 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 53 55 (face font-lock-keyword-face fontified t) 55 57 (fontified t) 57 58 (face highlight-numbers-number fontified t) 58 65 (fontified t) 65 66 (face highlight-numbers-number fontified t) 66 70 (fontified t) 70 71 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (0 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 71 72 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 72 73 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 73 74 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 74 75 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (1 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 75 76 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 76 77 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 77 78 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 78 82 (face font-lock-keyword-face fontified t) 82 88 (fontified t) 88 89 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (0 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 89 90 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 90 91 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 91 92 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 92 93 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (1 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 93 94 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 94 95 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 95 96 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 96 100 (face font-lock-keyword-face fontified t) 100 101 (fontified t) 101 102 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (0 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 102 103 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 103 104 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 104 105 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 105 106 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (1 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 106 107 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 107 108 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 108 109 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 109 110 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (2 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│")) ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 110 111 (highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 111 112 (highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 112 113 (highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 113 115 (face font-lock-keyword-face fontified t) 115 117 (fontified t) 117 118 (face highlight-numbers-number fontified t) 118 125 (fontified t) 125 126 (face highlight-numbers-number fontified t) 126 130 (fontified t) 130 131 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (0 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 131 132 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 132 133 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 133 134 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 134 135 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (1 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 135 136 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 136 137 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 137 138 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 138 139 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (2 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│")) ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 139 140 (highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 140 141 (highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 141 142 (highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 142 146 (face font-lock-keyword-face fontified t) 146 152 (fontified t) 152 153 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (0 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 153 154 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 154 155 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 155 156 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 156 157 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (1 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 157 158 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 158 159 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 159 160 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 160 161 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (2 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│")) ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 161 162 (highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 162 163 (highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 163 164 (highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 138 in hw1.sml>) (#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 164 168 (face font-lock-keyword-face fontified t) 168 175 (fontified t)) . -180) (undo-tree-id509 . -175) (undo-tree-id510 . -175) (undo-tree-id511 . -45) (undo-tree-id512 . -175) (undo-tree-id513 . -101) (undo-tree-id514 . -175) (undo-tree-id515 . -1) (undo-tree-id516 . -21) (undo-tree-id517 . -22) (undo-tree-id518 . -36) (undo-tree-id519 . -37) (undo-tree-id520 . -45) (undo-tree-id521 . -46) (undo-tree-id522 . -49) (undo-tree-id523 . -50) (undo-tree-id524 . -70) (undo-tree-id525 . -71) (undo-tree-id526 . -74) (undo-tree-id527 . -75) (undo-tree-id528 . -88) (undo-tree-id529 . -89) (undo-tree-id530 . -92) (undo-tree-id531 . -93) (undo-tree-id532 . -101) (undo-tree-id533 . -102) (undo-tree-id534 . -105) (undo-tree-id535 . -106) (undo-tree-id536 . -109) (undo-tree-id537 . -110) (undo-tree-id538 . -130) (undo-tree-id539 . -131) (undo-tree-id540 . -134) (undo-tree-id541 . -135) (undo-tree-id542 . -138) (undo-tree-id543 . -139) (undo-tree-id544 . -152) (undo-tree-id545 . -153) (undo-tree-id546 . -156) (undo-tree-id547 . -157) (undo-tree-id548 . -160) (undo-tree-id549 . -161) (undo-tree-id550 . -1) (undo-tree-id551 . -21) (undo-tree-id552 . -22) (undo-tree-id553 . -36) (undo-tree-id554 . -37) (undo-tree-id555 . -45) (undo-tree-id556 . -46) (undo-tree-id557 . -49) (undo-tree-id558 . -50) (undo-tree-id559 . -70) (undo-tree-id560 . -71) (undo-tree-id561 . -74) (undo-tree-id562 . -75) (undo-tree-id563 . -88) (undo-tree-id564 . -89) (undo-tree-id565 . -92) (undo-tree-id566 . -93) (undo-tree-id567 . -101) (undo-tree-id568 . -102) (undo-tree-id569 . -105) (undo-tree-id570 . -106) (undo-tree-id571 . -109) (undo-tree-id572 . -110) (undo-tree-id573 . -130) (undo-tree-id574 . -131) (undo-tree-id575 . -134) (undo-tree-id576 . -135) (undo-tree-id577 . -138) (undo-tree-id578 . -139) (undo-tree-id579 . -152) (undo-tree-id580 . -153) (undo-tree-id581 . -156) (undo-tree-id582 . -157) (undo-tree-id583 . -160) (undo-tree-id584 . -161) (undo-tree-id585 . -1) (undo-tree-id586 . -21) (undo-tree-id587 . -22) (undo-tree-id588 . -36) (undo-tree-id589 . -37) (undo-tree-id590 . -45) (undo-tree-id591 . -46) (undo-tree-id592 . -49) (undo-tree-id593 . -50) (undo-tree-id594 . -70) (undo-tree-id595 . -71) (undo-tree-id596 . -74) (undo-tree-id597 . -75) (undo-tree-id598 . -88) (undo-tree-id599 . -89) (undo-tree-id600 . -92) (undo-tree-id601 . -93) (undo-tree-id602 . -101) (undo-tree-id603 . -102) (undo-tree-id604 . -105) (undo-tree-id605 . -106) (undo-tree-id606 . -109) (undo-tree-id607 . -110) (undo-tree-id608 . -130) (undo-tree-id609 . -131) (undo-tree-id610 . -134) (undo-tree-id611 . -135) (undo-tree-id612 . -138) (undo-tree-id613 . -139) (undo-tree-id614 . -152) (undo-tree-id615 . -153) (undo-tree-id616 . -156) (undo-tree-id617 . -157) (undo-tree-id618 . -160) (undo-tree-id619 . -161) (undo-tree-id620 . -175) (undo-tree-id621 . -21) (undo-tree-id622 . -21) (undo-tree-id623 . -21) (undo-tree-id624 . -21) (undo-tree-id625 . -21) (undo-tree-id626 . -21) (undo-tree-id627 . -21) (undo-tree-id628 . -21) (undo-tree-id629 . -21) (undo-tree-id630 . -21) (undo-tree-id631 . -21) (undo-tree-id632 . -21) (undo-tree-id633 . -21) (undo-tree-id634 . -36) (undo-tree-id635 . -36) (undo-tree-id636 . -36) (undo-tree-id637 . -36) (undo-tree-id638 . -36) (undo-tree-id639 . -36) (undo-tree-id640 . -36) (undo-tree-id641 . -36) (undo-tree-id642 . -36) (undo-tree-id643 . -45) (undo-tree-id644 . -45) (undo-tree-id645 . -45) (undo-tree-id646 . -45) (undo-tree-id647 . -1) (undo-tree-id648 . -21) (undo-tree-id649 . -22) (undo-tree-id650 . -36) (undo-tree-id651 . -37) (undo-tree-id652 . -45) (undo-tree-id653 . -46) (undo-tree-id654 . -49) (undo-tree-id655 . -50) (undo-tree-id656 . -70) (undo-tree-id657 . -71) (undo-tree-id658 . -74) (undo-tree-id659 . -75) (undo-tree-id660 . -88) (undo-tree-id661 . -89) (undo-tree-id662 . -92) (undo-tree-id663 . -93) (undo-tree-id664 . -101) (undo-tree-id665 . -102) (undo-tree-id666 . -105) (undo-tree-id667 . -106) (undo-tree-id668 . -109) (undo-tree-id669 . -110) (undo-tree-id670 . -130) (undo-tree-id671 . -131) (undo-tree-id672 . -134) (undo-tree-id673 . -135) (undo-tree-id674 . -138) (undo-tree-id675 . -139) (undo-tree-id676 . -152) (undo-tree-id677 . -153) (undo-tree-id678 . -156) (undo-tree-id679 . -157) (undo-tree-id680 . -160) (undo-tree-id681 . -161) (undo-tree-id682 . -45) (undo-tree-id683 . -45) (undo-tree-id684 . -45) (undo-tree-id685 . -45) (undo-tree-id686 . -45) (undo-tree-id687 . -70) (undo-tree-id688 . -70) (undo-tree-id689 . -70) (undo-tree-id690 . -70) (undo-tree-id691 . -70) (undo-tree-id692 . -70) (undo-tree-id693 . -70) (undo-tree-id694 . -70) (undo-tree-id695 . -70) (undo-tree-id696 . -88) (undo-tree-id697 . -88) (undo-tree-id698 . -88) (undo-tree-id699 . -88) (undo-tree-id700 . -88) (undo-tree-id701 . -88) (undo-tree-id702 . -88) (undo-tree-id703 . -88) (undo-tree-id704 . -88) (undo-tree-id705 . -88) (undo-tree-id706 . -88) (undo-tree-id707 . -88) (undo-tree-id708 . -88) (undo-tree-id709 . -101) (undo-tree-id710 . -101) (undo-tree-id711 . -101) (undo-tree-id712 . -101) (undo-tree-id713 . -45) (undo-tree-id714 . -46) (undo-tree-id715 . -49) (undo-tree-id716 . -50) (undo-tree-id717 . -70) (undo-tree-id718 . -71) (undo-tree-id719 . -74) (undo-tree-id720 . -75) (undo-tree-id721 . -88) (undo-tree-id722 . -89) (undo-tree-id723 . -92) (undo-tree-id724 . -93) (undo-tree-id725 . -101) (undo-tree-id726 . -102) (undo-tree-id727 . -105) (undo-tree-id728 . -106) (undo-tree-id729 . -109) (undo-tree-id730 . -110) (undo-tree-id731 . -130) (undo-tree-id732 . -131) (undo-tree-id733 . -134) (undo-tree-id734 . -135) (undo-tree-id735 . -138) (undo-tree-id736 . -139) (undo-tree-id737 . -152) (undo-tree-id738 . -153) (undo-tree-id739 . -156) (undo-tree-id740 . -157) (undo-tree-id741 . -160) (undo-tree-id742 . -161) (undo-tree-id743 . -101) (undo-tree-id744 . -101) (undo-tree-id745 . -101) (undo-tree-id746 . -101) (undo-tree-id747 . -101) (undo-tree-id748 . -101) (undo-tree-id749 . -101) (undo-tree-id750 . -101) (undo-tree-id751 . -101) (undo-tree-id752 . -130) (undo-tree-id753 . -130) (undo-tree-id754 . -130) (undo-tree-id755 . -130) (undo-tree-id756 . -130) (undo-tree-id757 . -130) (undo-tree-id758 . -130) (undo-tree-id759 . -130) (undo-tree-id760 . -130) (undo-tree-id761 . -130) (undo-tree-id762 . -130) (undo-tree-id763 . -130) (undo-tree-id764 . -130) (undo-tree-id765 . -152) (undo-tree-id766 . -152) (undo-tree-id767 . -152) (undo-tree-id768 . -152) (undo-tree-id769 . -152) (undo-tree-id770 . -152) (undo-tree-id771 . -152) (undo-tree-id772 . -152) (undo-tree-id773 . -152) (undo-tree-id774 . -152) (undo-tree-id775 . -152) (undo-tree-id776 . -152) (undo-tree-id777 . -152) (undo-tree-id778 . -175) (undo-tree-id779 . -175) (undo-tree-id780 . -175) (undo-tree-id781 . -175) (undo-tree-id782 . -175) (undo-tree-id783 . -1) (undo-tree-id784 . -21) (undo-tree-id785 . -22) (undo-tree-id786 . -36) (undo-tree-id787 . -37) (undo-tree-id788 . -45) (undo-tree-id789 . -46) (undo-tree-id790 . -49) (undo-tree-id791 . -50) (undo-tree-id792 . -70) (undo-tree-id793 . -71) (undo-tree-id794 . -74) (undo-tree-id795 . -75) (undo-tree-id796 . -88) (undo-tree-id797 . -89) (undo-tree-id798 . -92) (undo-tree-id799 . -93) (undo-tree-id800 . -101) (undo-tree-id801 . -102) (undo-tree-id802 . -105) (undo-tree-id803 . -106) (undo-tree-id804 . -109) (undo-tree-id805 . -110) (undo-tree-id806 . -130) (undo-tree-id807 . -131) (undo-tree-id808 . -134) (undo-tree-id809 . -135) (undo-tree-id810 . -138) (undo-tree-id811 . -139) (undo-tree-id812 . -152) (undo-tree-id813 . -153) (undo-tree-id814 . -156) (undo-tree-id815 . -157) (undo-tree-id816 . -160) (undo-tree-id817 . -161) (undo-tree-id818 . -175) (undo-tree-id819 . -175) (undo-tree-id820 . -175) (undo-tree-id821 . -175) (undo-tree-id822 . -175) (undo-tree-id823 . -175) (undo-tree-id824 . -175) (undo-tree-id825 . -175) (undo-tree-id826 . -175) (undo-tree-id827 . -175) (undo-tree-id828 . -175) (undo-tree-id829 . -175) (undo-tree-id830 . -175) (undo-tree-id831 . -175) (undo-tree-id832 . -175) (undo-tree-id833 . -175) (undo-tree-id834 . -175) (undo-tree-id835 . -175) (undo-tree-id836 . -175) (undo-tree-id837 . -175) (undo-tree-id838 . -175) (undo-tree-id839 . -175) (undo-tree-id840 . -175) (undo-tree-id841 . -175) (undo-tree-id842 . -175) (undo-tree-id843 . -175) (undo-tree-id844 . -175) (undo-tree-id845 . -175) (undo-tree-id846 . -175) (undo-tree-id847 . -175) (undo-tree-id848 . -175) (undo-tree-id849 . -175) (undo-tree-id850 . -175) (undo-tree-id851 . -175) (undo-tree-id852 . -175) (undo-tree-id853 . -175) (undo-tree-id854 . -175) 355 (t 25301 36462 96862 231000)) nil (25305 16035 948560 0) 0 nil])
([nil nil ((180 . 184)) nil (25305 16035 948305 0) 0 nil])
([nil nil ((184 . 186)) nil (25305 16035 948304 0) 0 nil])
([nil nil ((#("    (* if #2 xs > 12 orelse #3 xs > 31 *)" 0 1 (face highlight-indent-guides-top-character-face display "│" highlight-indent-guides-prop (0 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 137 in hw1.sml> . #<marker at 145 in hw1.sml>))) fontified t) 4 7 (face font-lock-comment-delimiter-face fontified t) 7 38 (face font-lock-comment-face fontified t) 38 41 (face font-lock-comment-delimiter-face fontified t)) . 138) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -41) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -6) (undo-tree-id459 . -6) (undo-tree-id460 . -6) (undo-tree-id461 . -6) (undo-tree-id462 . -6) (undo-tree-id463 . -6) (undo-tree-id464 . -6) (undo-tree-id465 . -6) (undo-tree-id466 . -6) (undo-tree-id467 . -6) (undo-tree-id468 . -6) (undo-tree-id469 . -6) (undo-tree-id470 . -6) (undo-tree-id471 . -6) (undo-tree-id472 . -6) (undo-tree-id473 . -6) (undo-tree-id474 . -6) (undo-tree-id475 . -6) (undo-tree-id476 . -6) (undo-tree-id477 . -6) (undo-tree-id478 . -6) (undo-tree-id479 . -6) (undo-tree-id480 . -6) (undo-tree-id481 . -6) (undo-tree-id482 . -6) (undo-tree-id483 . -41) (undo-tree-id484 . -41) (undo-tree-id485 . -41) (undo-tree-id486 . -41) (undo-tree-id487 . -41) (undo-tree-id488 . -41) (undo-tree-id489 . -41) (undo-tree-id490 . -41) (undo-tree-id491 . -41) (undo-tree-id492 . -41) (undo-tree-id493 . -41) (undo-tree-id494 . -41) (undo-tree-id495 . -41) (undo-tree-id496 . -41) (undo-tree-id497 . -41) (undo-tree-id498 . -41) (undo-tree-id499 . -41) (undo-tree-id500 . -41) (undo-tree-id501 . -41) (undo-tree-id502 . -41) (undo-tree-id503 . -41) (undo-tree-id504 . -41) (undo-tree-id505 . -41) (undo-tree-id506 . -41) (undo-tree-id507 . -41) (undo-tree-id508 . -41)) nil (25305 16035 948301 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -137) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) 138) nil (25305 16035 948241 0) 0 nil])
([nil nil ((144 . 153)) nil (25305 16035 948163 0) 0 nil])
([nil nil ((144 . 149)) nil (25305 16035 948162 0) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -148) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) 149) nil (25305 16035 948160 0) 0 nil])
([nil nil ((148 . 152)) nil (25305 16035 948136 0) 0 nil])
([nil nil ((#("2" 0 1 (face highlight-numbers-number fontified t)) . -151) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) 152) nil (25305 16035 948134 0) 0 nil])
([nil nil ((151 . 157)) nil (25305 16035 948115 0) 0 nil])
([nil nil ((157 . 159)) nil (25305 16035 948114 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -158) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) 159) nil (25305 16035 948113 0) 0 nil])
([nil nil ((158 . 162)) nil (25305 16035 948099 0) 0 nil])
([nil nil ((155 . 156) (#(")" 0 1 (fontified nil)) . -155) (155 . 156)) nil (25305 16035 948099 0) 0 nil])
([nil nil ((141 . 142)) nil (25305 16035 948097 0) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -141) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) 142) nil (25305 16035 948096 0) 0 nil])
([nil nil ((141 . 142)) nil (25305 16035 948081 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 142) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1)) nil (25305 16035 948078 0) 0 nil])
([nil nil ((165 . 177) (163 . 166)) nil (25305 16035 948028 0) 0 nil])
([nil nil ((177 . 182)) nil (25305 16035 948028 0) 0 nil])
([nil nil ((179 . 186) (#("and" 0 3 (face font-lock-keyword-face fontified t)) . -179) (undo-tree-id99 . -3) (undo-tree-id100 . -3) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -2) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -3) (undo-tree-id136 . -3) (undo-tree-id137 . -3) (undo-tree-id138 . -3) (undo-tree-id139 . -3) (undo-tree-id140 . -3) (undo-tree-id141 . -3) (undo-tree-id142 . -3) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3) (undo-tree-id146 . -3) (undo-tree-id147 . -3) (undo-tree-id148 . -3) (undo-tree-id149 . -3) (undo-tree-id150 . -3) (undo-tree-id151 . -3) (undo-tree-id152 . -3) (undo-tree-id153 . -3) (undo-tree-id154 . -3) (undo-tree-id155 . -3) (undo-tree-id156 . -3) (undo-tree-id157 . -3) (undo-tree-id158 . -3) (undo-tree-id159 . -3) (undo-tree-id160 . -3) (undo-tree-id161 . -3) (undo-tree-id162 . -3) (undo-tree-id163 . -3) (undo-tree-id164 . -3) (undo-tree-id165 . -3) (undo-tree-id166 . -3) (undo-tree-id167 . -3) (undo-tree-id168 . -3) (undo-tree-id169 . -3) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (undo-tree-id172 . -3) (undo-tree-id173 . -3) (undo-tree-id174 . -3) (undo-tree-id175 . -3) (undo-tree-id176 . -3) (undo-tree-id177 . -3) (undo-tree-id178 . -3) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -3) (undo-tree-id188 . -3) 182) nil (25305 16035 948023 0) 0 nil])
([nil nil ((186 . 188)) nil (25305 16035 947954 0) 0 nil])
([nil nil ((#("@" 0 1 (fontified t)) . -187) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) 188) nil (25305 16035 947953 0) 0 nil])
([nil nil ((187 . 195)) nil (25305 16035 947938 0) 0 nil])
([nil nil ((195 . 199)) nil (25305 16035 947938 0) 0 nil])
([nil nil ((196 . 197)) nil (25305 16035 947937 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . 202) (undo-tree-id0 . -8) (undo-tree-id1 . -8) (undo-tree-id2 . -8) (undo-tree-id3 . -8) (undo-tree-id4 . -8) (undo-tree-id5 . -8) (undo-tree-id6 . -8) (undo-tree-id7 . -8) (undo-tree-id8 . -8) (undo-tree-id9 . -8) (undo-tree-id10 . -8) (undo-tree-id11 . -8) (undo-tree-id12 . -8) (undo-tree-id13 . -8) (undo-tree-id14 . -8) (undo-tree-id15 . -8) (undo-tree-id16 . -8) (undo-tree-id17 . -8) (undo-tree-id18 . -8) (undo-tree-id19 . -8) (undo-tree-id20 . -8) (undo-tree-id21 . -8) (undo-tree-id22 . -8) (undo-tree-id23 . -8) (undo-tree-id24 . -8) (undo-tree-id25 . -8) (undo-tree-id26 . -8) (undo-tree-id27 . -8) (undo-tree-id28 . -8) (undo-tree-id29 . -8) (undo-tree-id30 . -8) (undo-tree-id31 . -8) (undo-tree-id32 . -8) (undo-tree-id33 . -8) (undo-tree-id34 . -8) (undo-tree-id35 . -8) (undo-tree-id36 . -8) (undo-tree-id37 . -8) (undo-tree-id38 . -8) (undo-tree-id39 . -8) (undo-tree-id40 . -8) (undo-tree-id41 . -8) (undo-tree-id42 . -8) (undo-tree-id43 . -8) (undo-tree-id44 . -8) (undo-tree-id45 . -8) (undo-tree-id46 . -8) (undo-tree-id47 . -8) (undo-tree-id48 . -8) (undo-tree-id49 . -8) (undo-tree-id50 . -8) (undo-tree-id51 . -8) (undo-tree-id52 . -8) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -8) (undo-tree-id56 . -8) (undo-tree-id57 . -8) (undo-tree-id58 . -8) (undo-tree-id59 . -8) (undo-tree-id60 . -8) (undo-tree-id61 . -8) (undo-tree-id62 . -8) (undo-tree-id63 . -8) (undo-tree-id64 . -8) (undo-tree-id65 . -8) (undo-tree-id66 . -8) (undo-tree-id67 . -8) (undo-tree-id68 . -8) (undo-tree-id69 . -8) (undo-tree-id70 . -8) (undo-tree-id71 . -8) (undo-tree-id72 . -8) (undo-tree-id73 . -8) (undo-tree-id74 . -8) (undo-tree-id75 . -8) (undo-tree-id76 . -8) (undo-tree-id77 . -8) (undo-tree-id78 . -8) (undo-tree-id79 . -8) (undo-tree-id80 . -8) (undo-tree-id81 . -8) (undo-tree-id82 . -8) (undo-tree-id83 . -8) 197) nil (25305 16035 947930 0) 0 nil])
([nil nil ((201 . 202) (t 25305 16035 970509 294000)) nil (25305 16072 738409 0) 0 nil])
([nil nil ((157 . 160) (#(" " 0 1 (fontified nil)) . 156) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (157 . 158)) nil (25305 16072 738407 0) 0 nil])
([nil nil ((205 . 219) (#(" " 0 1 (fontified nil)) . 204) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (205 . 206)) nil (25305 16072 738394 0) 0 nil])
([nil nil ((219 . 222)) nil (25305 16072 738362 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -221) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) 222) nil (25305 16072 738361 0) 0 nil])
([nil nil ((221 . 225)) nil (25305 16072 738350 0) 0 nil])
([nil nil ((#("           " 0 1 (face highlight-indent-guides-top-character-face display "│" highlight-indent-guides-prop (1 nil t 1 (character (top) (face highlight-indent-guides-top-character-face display "│") (nil) (face highlight-indent-guides-character-face display "│")) ((#<marker at 207 in hw1.sml> . #<marker at 278 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>))) fontified t) 1 2 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 207 in hw1.sml> . #<marker at 278 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>))) fontified t) 2 3 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 207 in hw1.sml> . #<marker at 278 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>))) fontified t) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 207 in hw1.sml> . #<marker at 278 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>))) fontified t) 4 5 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 207 in hw1.sml> . #<marker at 278 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>))) fontified t) 5 6 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 207 in hw1.sml> . #<marker at 278 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>))) fontified t) 6 7 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 207 in hw1.sml> . #<marker at 278 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>))) fontified t) 7 8 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 207 in hw1.sml> . #<marker at 278 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>))) fontified t) 8 9 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 207 in hw1.sml> . #<marker at 278 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>))) fontified t) 9 10 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 207 in hw1.sml> . #<marker at 278 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>))) fontified t) 10 11 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 207 in hw1.sml> . #<marker at 278 in hw1.sml>) (#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>))) fontified t)) . -208) (undo-tree-id992 . -11) (undo-tree-id993 . -11) (undo-tree-id994 . -11) (undo-tree-id995 . -11) (undo-tree-id996 . -11) (undo-tree-id997 . -11) (undo-tree-id998 . -11) (undo-tree-id999 . -11) (undo-tree-id1000 . -11) (undo-tree-id1001 . -11) (undo-tree-id1002 . -11) (undo-tree-id1003 . -11) (undo-tree-id1004 . -11) (undo-tree-id1005 . -11) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) 225) nil (25305 16072 738348 0) 0 nil])
([nil nil ((214 . 217)) nil (25305 16072 738328 0) 0 nil])
([nil nil ((#("()" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . 215) (undo-tree-id897 . -2) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . 2) (undo-tree-id933 . -1) (undo-tree-id934 . 1) (undo-tree-id935 . -2) (undo-tree-id936 . -2) (undo-tree-id937 . -2) (undo-tree-id938 . -2) (undo-tree-id939 . -2) (undo-tree-id940 . -2) (undo-tree-id941 . -2) (undo-tree-id942 . -2) (undo-tree-id943 . -2) (undo-tree-id944 . -2) (undo-tree-id945 . -2) (undo-tree-id946 . -2) (undo-tree-id947 . -2) (undo-tree-id948 . -2) (undo-tree-id949 . -2) (undo-tree-id950 . -2) (undo-tree-id951 . -2) (undo-tree-id952 . -2) (undo-tree-id953 . -2) (undo-tree-id954 . -2) (undo-tree-id955 . -2) (undo-tree-id956 . -2) (undo-tree-id957 . -2) (undo-tree-id958 . -2) (undo-tree-id959 . -2) (undo-tree-id960 . -2) (undo-tree-id961 . -2) (undo-tree-id962 . -2) (undo-tree-id963 . -2) (undo-tree-id964 . -2) (undo-tree-id965 . -2) (undo-tree-id966 . -2) (undo-tree-id967 . -2) (undo-tree-id968 . -2) (undo-tree-id969 . -2) (undo-tree-id970 . -2) (undo-tree-id971 . -2) (undo-tree-id972 . -2) (undo-tree-id973 . -2) (undo-tree-id974 . -2) (undo-tree-id975 . -2) (undo-tree-id976 . -2) (undo-tree-id977 . -2) (undo-tree-id978 . -2) (undo-tree-id979 . -2) (undo-tree-id980 . -2) (undo-tree-id981 . -2) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1)) nil (25305 16072 738323 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 251 . 252) (nil fontified nil 251 . 252) (nil fontified nil 248 . 251) (nil fontified nil 247 . 248) (nil fontified nil 240 . 247) (nil fontified nil 239 . 240) (nil fontified nil 237 . 239) (nil fontified nil 230 . 237) (nil fontified nil 226 . 230) (nil fontified nil 225 . 226) (nil fontified nil 218 . 225) (nil fontified nil 217 . 218) (nil fontified nil 216 . 217) (nil fontified nil 215 . 216) (215 . 252)) nil (25305 16072 738256 0) 0 nil])
([nil nil ((251 . 256)) nil (25305 16072 738253 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -255) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) 256) nil (25305 16072 738251 0) 0 nil])
([nil nil ((255 . 267)) nil (25305 16072 738233 0) 0 nil])
([nil nil ((267 . 273)) nil (25305 16072 738233 0) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -244) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) 245) nil (25305 16072 738225 0) 0 nil])
([nil nil ((244 . 245)) nil (25305 16072 738206 0) 0 nil])
([nil nil ((138 . 142) (#("   " 0 1 (face highlight-indent-guides-top-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character (top) (face highlight-indent-guides-top-character-face display "│") (nil) (face highlight-indent-guides-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>)))) 1 2 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>)))) 2 3 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>))))) . 138) 148 (t 25305 16072 761108 144000)) nil (25305 16082 755314 0) 0 nil])
([nil nil ((158 . 162) (#("   " 0 1 (face highlight-indent-guides-top-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character (top) (face highlight-indent-guides-top-character-face display "│") (nil) (face highlight-indent-guides-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>)))) 1 2 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>)))) 2 3 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>))))) . 158) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) 167) nil (25305 16086 407295 0) 0 nil] [nil nil ((apply yas--snippet-revive 146 157 #s(yas--snippet nil nil #s(yas--exit #<marker at 146 in hw1.sml> nil) 0 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit #<marker at 146 in hw1.sml> nil) 0 nil nil nil nil)) (146 . 157) (#("x" 0 1 (fontified t)) . 146) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) 147) ((146 . 147) (#("(* XXX:  *)" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 7 (face font-lock-comment-face fontified t) 7 8 (face font-lock-comment-delimiter-face fontified t) 8 11 (face font-lock-comment-delimiter-face fontified t)) . 146) (undo-tree-id1126 . -8) (undo-tree-id1127 . -8) (undo-tree-id1128 . -8)) (25305 16082 755166 0) 0 nil])
([nil current ((207 . 211) (#("   " 0 1 (face highlight-indent-guides-top-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character (stack) (face highlight-indent-guides-stack-character-face display "│") (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│")) ((#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>)))) 1 2 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>)))) 2 3 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 138 in hw1.sml> . #<marker at 278 in hw1.sml>))))) . 207) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) 217) nil (25305 16086 407290 0) 0 nil])
nil
nil
