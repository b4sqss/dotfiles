(undo-tree-save-format-version . 1)
"adcda1f6b6de179d8fa9ae80d271b67308d47180"
[nil nil nil nil (26256 6711 754708 965000) 0 nil]
([nil nil ((#("** DONE Modelo de negócios
DEADLINE: <2024-06-23 Sun>
** DONE Apresentação aulao para calouros
<2024-06-25 Tue 17:30>" 0 1 (keymap (keymap) face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (face org-level-2 keymap (keymap) composition (1 1 [9675]) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (face org-level-2 keymap (keymap) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 3 7 (face (org-done org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 7 8 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 8 26 (face (org-headline-done org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 26 27 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 27 36 (face org-special-keyword wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 36 37 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 37 52 (face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 52 53 (face org-date rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 53 54 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 54 55 (keymap (keymap) face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 55 56 (face org-level-2 keymap (keymap) composition (1 1 [9675]) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 56 57 (face org-level-2 keymap (keymap) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 57 61 (face (org-done org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 61 62 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 62 94 (face (org-headline-done org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 94 95 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 95 116 (face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 116 117 (face org-date rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1582) (undo-tree-id168 . -117) (undo-tree-id169 . -117) (undo-tree-id170 . -117) (undo-tree-id171 . -117) (undo-tree-id172 . -117) (undo-tree-id173 . -117) (undo-tree-id174 . -117) (undo-tree-id175 . -117) (undo-tree-id176 . -117) (undo-tree-id177 . -117) (undo-tree-id178 . -117) (undo-tree-id179 . -117) (undo-tree-id180 . -117) (undo-tree-id181 . -117) (undo-tree-id182 . -117) (undo-tree-id183 . -117) (undo-tree-id184 . -117) (undo-tree-id185 . -117) (undo-tree-id186 . -117) (undo-tree-id187 . -117) (undo-tree-id188 . -117) (undo-tree-id189 . -117) (undo-tree-id190 . -117) (undo-tree-id191 . -117) (undo-tree-id192 . -117) (undo-tree-id193 . -117) (undo-tree-id194 . -117) (undo-tree-id195 . -117) (undo-tree-id196 . -117) (undo-tree-id197 . -117) (undo-tree-id198 . -117) (undo-tree-id199 . -117) (undo-tree-id200 . -117) (undo-tree-id201 . -117) (undo-tree-id202 . -117) (undo-tree-id203 . -117) (undo-tree-id204 . -117) (undo-tree-id205 . -117) (undo-tree-id206 . -117) (undo-tree-id207 . -117) (undo-tree-id208 . -117) (undo-tree-id209 . -117) (undo-tree-id210 . -117) (undo-tree-id211 . -117) (undo-tree-id212 . -117) (undo-tree-id213 . -117) (undo-tree-id214 . -117) (undo-tree-id215 . -117) (undo-tree-id216 . -117) (undo-tree-id217 . -117) (undo-tree-id218 . -117) (undo-tree-id219 . -117) (undo-tree-id220 . -117) (undo-tree-id221 . -117) (undo-tree-id222 . -117) (undo-tree-id223 . -117) (undo-tree-id224 . -117) (undo-tree-id225 . -117) (undo-tree-id226 . -117) (undo-tree-id227 . -117) (undo-tree-id228 . -117) (undo-tree-id229 . -117) (undo-tree-id230 . -117) (undo-tree-id231 . -117) (undo-tree-id232 . -117) (undo-tree-id233 . -117) (undo-tree-id234 . -117) (undo-tree-id235 . -117) (undo-tree-id236 . -117) (undo-tree-id237 . -117) (undo-tree-id238 . -117) (undo-tree-id239 . -117) (undo-tree-id240 . -117) (undo-tree-id241 . -117) (undo-tree-id242 . -117) (undo-tree-id243 . -117) (undo-tree-id244 . -117) (undo-tree-id245 . -117) (undo-tree-id246 . -117) (undo-tree-id247 . -117) (undo-tree-id248 . -117) (undo-tree-id249 . -71) (undo-tree-id250 . -71) (undo-tree-id251 . -71) (undo-tree-id252 . -71) (undo-tree-id253 . -71) (undo-tree-id254 . -71) (undo-tree-id255 . -71) (undo-tree-id256 . -71) (undo-tree-id257 . -71) (undo-tree-id258 . -71) (undo-tree-id259 . -71) (undo-tree-id260 . -71) (undo-tree-id261 . -71) (undo-tree-id262 . -71) (undo-tree-id263 . -71) (undo-tree-id264 . -71) (undo-tree-id265 . -71) (undo-tree-id266 . -49) (undo-tree-id267 . -49) (undo-tree-id268 . -49) (undo-tree-id269 . -49) (undo-tree-id270 . -49) (undo-tree-id271 . -49) (undo-tree-id272 . -49) (undo-tree-id273 . -49) (undo-tree-id274 . -49) (undo-tree-id275 . -49) (undo-tree-id276 . -49) (undo-tree-id277 . -49) (undo-tree-id278 . -49) (undo-tree-id279 . -49) (undo-tree-id280 . -49) (undo-tree-id281 . -49) (undo-tree-id282 . -49) (undo-tree-id283 . -17) (undo-tree-id284 . -17) (undo-tree-id285 . -17) (undo-tree-id286 . -17) (undo-tree-id287 . -17) (undo-tree-id288 . -17) (undo-tree-id289 . -17) (undo-tree-id290 . -17) (undo-tree-id291 . -17) (undo-tree-id292 . -17) (undo-tree-id293 . -17) (undo-tree-id294 . -17) (undo-tree-id295 . -17) (undo-tree-id296 . -17) (undo-tree-id297 . -17) (undo-tree-id298 . -17) (undo-tree-id299 . -17) (t 26251 981 508693 494000)) nil (26256 6711 754705 263000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . -1581) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) 1582) nil (26256 6711 754641 776000) 0 nil])
([nil nil ((nil org-todo-head nil 1086 . 1107) (nil org-todo-head nil 1085 . 1086) (nil org-todo-head nil 1081 . 1085) (nil org-todo-head nil 1080 . 1081) (nil org-todo-head nil 1079 . 1080) (nil org-todo-head nil 1077 . 1079) (1080 . 1086) (#(" TODO " 0 1 (face org-level-3 keymap (keymap) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 1 5 (face (org-todo org-level-3) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 5 6 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 1080) (t 26256 6711 755494 0) (1086 . 1086) 1107 (t 26256 6711 755494 0)) nil (26256 6730 673264 393000) 0 nil])
([nil nil ((nil org-todo-head nil 1009 . 1012) (nil org-todo-head nil 985 . 1009) (nil org-todo-head nil 984 . 985) (nil org-todo-head nil 980 . 984) (nil org-todo-head nil 979 . 980) (nil org-todo-head nil 978 . 979) (nil org-todo-head nil 976 . 978) (979 . 985) (#(" TODO " 0 1 (face org-level-3 keymap (keymap) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 1 5 (face (org-todo org-level-3) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 5 6 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 979) (t 26256 6730 732517 902000) (985 . 985) 1066 (t 26256 6730 732517 902000)) nil (26256 6740 880440 398000) 0 nil])
([nil nil ((#(" " 0 1 (face (org-checkbox) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) org-stats 0 fontified t)) . 1041) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1)) nil (26256 6740 880437 604000) 0 nil])
([nil nil ((1041 . 1042)) nil (26256 6740 880419 794000) 0 nil])
([nil nil ((710 . 711) (t 26256 6740 882703 448000)) nil (26256 6762 15124 775000) 0 nil])
([nil nil ((710 . 711)) nil (26256 6762 15122 470000) 0 nil])
([nil nil ((772 . 774)) nil (26256 6762 15116 254000) 0 nil])
([nil nil ((1768 . 1779) (t 26256 6762 19744 532000)) nil (26256 6779 606531 150000) 0 nil])
([nil nil ((#("E" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1777) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (#("r" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1778) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) 1779) nil (26256 6779 606528 357000) 0 nil])
([nil nil ((1777 . 1782)) nil (26256 6779 606481 143000) 0 nil])
([nil nil ((#("t" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1781) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) 1782) nil (26256 6779 606479 676000) 0 nil])
([nil nil ((1781 . 1791)) nil (26256 6779 606472 63000) 0 nil])
([nil nil ((#("ŕ" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1790) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) 1791) nil (26256 6779 606470 178000) 0 nil])
([nil nil ((1790 . 1793)) nil (26256 6779 606462 146000) 0 nil])
([nil nil ((#("r" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1791) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (#("i" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1792) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) 1793) nil (26256 6779 606459 352000) 0 nil])
([nil nil ((#("o" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1790) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) 1791) nil (26256 6779 606435 955000) 0 nil])
([nil nil ((1790 . 1794)) nil (26256 6779 606390 277000) 0 nil])
([nil nil ((1794 . 1795)) nil (26256 6779 606383 572000) 0 nil])
([nil nil ((1794 . 1795) (t 26256 6779 663378 401000)) nil (26256 6818 39089 169000) 0 nil])
([nil current ((1795 . 1824)) nil (26256 6818 39083 23000) 0 nil])
nil
